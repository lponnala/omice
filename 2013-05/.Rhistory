length(keys(B))
B[keys(B)[1]]
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
D[1:10,1]
B['7']
cluster=1
groupid =D[,cluster]
cluster=1
groupid=D[,cluster]
is.na(groupid)
which(!is.na(groupid))
cluster=1
groupid=D[,cluster]
groupid = groupid[which(!is.na(groupid))]
length(groupid)
groupid
S[groupid]
S[[groupid]]
?get
values(S,keys=groupid[1:2])
t(values(S,keys=groupid[1:2]))
y = t(values(S,keys=groupid[1:2]))
class(y)
y = data.frame(t(values(S,keys=groupid[1:2])))
y
rownames(y)
colnames(y)
length(groupid)
groupid = D[which(!is.na(D[,cluster])),cluster]
length(groupid)
groupid
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
dim(y)
library(ggplot2)
plot(y)
summary(y)
clc
dim(y)
y
clc
summary(y)
clc
y
plot(c(1,4,9,14),colMeans(y))
colMeans(y)
class(y)
class(y[,1])
class(y[,2])
?data.frame
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = t(values(S,keys=groupid))
class(y[,2])
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
colMeans(y)
class(y[,1])
y[,1]
keys(y)
y[,1]
class(y[,1])
class(values(S))
values(S)
values(S,keys=groupid)
class(values(S,keys=groupid))
y = values(S,keys=groupid)
y[,1]
class(y[,1])
class(y[,1])
as.numeric(y[,1])
y[,1]=as.numeric(y[,1])
y[,1]
y = values(S,keys=groupid)
y = as.numeric(values(S,keys=groupid))
y
dim(y)
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
# y = t(values(S,keys=groupid))
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
class(y)
y[,1]
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
# y = t(values(S,keys=groupid))
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
''
class(y)
y
colMeans(y)
summary(y)
summary(y)[,1]
s = summary(y)
class(s)
s[1]
s[1,1]
s[1,2]
?geom_ribbon
plot(1:4,y)
?qplot
qplot(mpg, wt, data=mtcars)
qplot(mpg, wt, data=mtcars, facets=vs ~ am)
names(mpg)
?melt
dim(y)
y[1:5,]
y[1:5,]
melt(y[1:5,],value=names(y[1:5,]))
d = melt(y,value=names(y))
dim(d)
class(d)
ggplot(d, aes(x=variable,y=value))
ggplot(d, aes(x=variable,y=value)) + geom_point()
p = ggplot(d, aes(x=variable,y=value)) + geom_point()
d = melt(y,value.name=names(y))
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
# y = t(values(S,keys=groupid))
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
d = melt(y, value.name=names(y))
d
d = melt(y, id.vars=names(y)  )
d
y
y = melt(y,value=names(y))
p = ggplot(y, aes(x=variable,y=value)) + geom_point()
print(p)
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
y
dim(y)
?melt
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
d = melt(y, value.name=names(y))
y
d
dim(y)
names(y)
y
d
d = melt(y, id.vars=rownames(y))
class(y)
y
y
y[1:5,]
y = y[1:5,]
y
melt(y, id.vars=names(y))
y
melt(y, value.name=names(y))
melt(y, value=names(y))
?melt
?dcast
?melt
melt(y, measure.vars=names(y))
y
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
y = melt(y, measure.vars=names(y))
p = ggplot(y, aes(x=variable,y=value)) + geom_point()
print(p)
source('plot.r')
y
?plyr
class(y)
summarise(y)
summarise(y[,1])
summarise(y[,2])
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
y = melt(y, measure.vars=names(y), variable.name='section')
p = ggplot(y, aes(x=section,y=value)) + geom_point()
print(p)
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
y = melt(y, measure.vars=names(y), variable.name='section', value.name='NadjSPC')
p = ggplot(y, aes(x=section,y=value)) + geom_point()
print(p)
?melt
y = melt(y, measure.vars=names(y), variable.name='section')
names(y)
source('plot.r')
source('plot.r')
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
names(y)
source('plot.r')
load('S.RData')
load('C.RData')
load('B.RData')
K = 6
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName="SPC",header=TRUE)
cluster = 1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
names(y) = c(1,4,9,14)
y
dim(y)
colStdevs(y)
class(y[,1])
source('plot.r')
colStdevs(y)
dim(y)[1]
sqrt(dim(y)[1])
colStdevs(y)/sqrt(dim(y)[1])
avg = colMeans(y)
se = colStdevs(y)/sqrt(dim(y)[1])
avg
se
rbind(avg,se)
t(rbind(avg,se))
data.frame(t(rbind(avg,se)))
ym = data.frame(t(rbind(avg,se)))
ym$avg
ym$se
names(y)
rbind(avg,se,names(y))
sec=names(y)
rbind(sec,avg,se
)
source('plot.r')
ym
source('plot.r')
ym
rownames(ym)=NUKK
rownames(ym)=NULL
ym
class(y)
names(y)
source('plot.r')
y
source('plot.r')
ym
Y = data.frame()
Y = rbind(Y, ym)
Y
Y = rbind(Y, ym)
Y
rownames(Y)=NULL
Y
source('plot.r')
Y
p = ggplot(Y, aes(x=sec,y=avg,colour=clustername)) +
geom_errorbar(aes(ymin=avg-se,ymax=avg+se), width=.1) +
geom_line() +
geom_point
p = ggplot(Y, aes(x=sec,y=avg,colour=clustername)) +
geom_errorbar(aes(ymin=avg-se,ymax=avg+se), width=.1) +
geom_line() +
geom_point()
print(p)
source('plot.r')
class(Y)
names(Y)
class(Y[,1])
class(Y[,2])
class(Y[,3])
class(Y[,4])
class(Y[,5])
dim(Y)
Y
?data.frame
source('plot.r')
p = ggplot(Y[,1:8], aes(x=sec,y=avg,colour=clustername)) +
geom_errorbar(aes(ymin=avg-se,ymax=avg+se), width=.1) +
geom_line() +
geom_point()
print(p)
Y
p = ggplot(Y[1:8,], aes(x=sec,y=avg,colour=clustername)) +
geom_errorbar(aes(ymin=avg-se,ymax=avg+se), width=.1) +
geom_line() +
geom_point()
print(p)
p = ggplot(Y[1:8,], aes(x=sec,y=avg,colour=clustername)) +
# geom_errorbar(aes(ymin=avg-se,ymax=avg+se), width=.1) +
geom_line() +
geom_point()
print(p)
Y
source('plot.r')
Y
y
cluster=1
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
avg = colMeans(y)
se = colStdevs(y)/sqrt(dim(y)[1])
clustername = rep(paste('#',cluster,sep=''),length(sec))
y = data.frame(t(rbind(clustername,sec,avg,se)))
y
y[,3]
y[,3] = as.numeric(y[,3])
y[,3]
y[,3] = as.character(y[,3])
y
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
avg = colMeans(y)
se = colStdevs(y)/sqrt(dim(y)[1])
clustername = rep(paste('#',cluster,sep=''),length(sec))
y = data.frame(t(rbind(clustername,sec,avg,se)))
y
y$avg
?rbind
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
avg = colMeans(y)
se = colStdevs(y)/sqrt(dim(y)[1])
clustername = rep(paste('#',cluster,sep=''),length(sec))
y
class(y[,1])
class(y[,2])
dim(y)
class(y[,3])
class(y[,4])
y = data.frame(t(rbind(clustername,sec,avg,se)))
y
class(y[,1])
class(y[,2])
class(y[,3])
class(y[,4])
y[,1] = as.numeric(y[,1])
y[,1]
y$avg
as.character(y$avg)
as.numeric(as.character(y$avg))
groupid = D[which(!is.na(D[,cluster])),cluster]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
avg = colMeans(y)
se = colStdevs(y)/sqrt(dim(y)[1])
clustername = rep(paste('#',cluster,sep=''),length(sec))
y = data.frame(t(rbind(clustername,sec,avg,se)))
y[,3] = as.numeric(as.character(y[,3]))
y[,4] = as.numeric(as.character(y[,4]))
rownames(y)=NULL
y
source('plot.r')
Y
class(Y[,1])
class(Y[,2])
class(Y[,3])
class(Y[,4])
source('plot.r')
source('plot.r')
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE, conf.interval=.95, .drop=TRUE) {
require(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This is does the summary; it's not easy to understand...
datac <- ddply(data, groupvars, .drop=.drop,
.fun= function(xx, col, na.rm) {
c( N    = length2(xx[,col], na.rm=na.rm),
mean = mean   (xx[,col], na.rm=na.rm),
sd   = sd     (xx[,col], na.rm=na.rm)
)
},
measurevar,
na.rm
)
# Rename the "mean" column
datac <- rename(datac, c("mean"=measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
df <- ToothGrowth
dfc <- summarySE(df, measurevar="len", groupvars=c("supp","dose"))
dfc
class(dfc[,1])
class(dfc[,2])
class(dfc[,3])
class(dfc[,4])
class(dfc[,5])
ggplot(dfc, aes(x=dose, y=len, colour=supp)) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1) +
geom_line() +
geom_point()
class(Y)
source('plot.r')
Y
class(Y[,1])
class(Y[,2])
source('plot.r')
avg
se
source('plot.r')
source('plot.r')
se
avg
Y
source('plot.r')
source('plot.r')
Y$avg+Y$se
Y$avg-Y$se
?ggsave
source('plot.r')
Y$avg-Y$se
source('plot.r')
source('plot.r')
source('plot.r')
source('plot.r')
source('plot.r')
source('plot.r')
y
K=6
sheet="COV"
D = read.xlsx(paste("k_",K,".xls",sep=''),sheetName=sheet,header=TRUE)
Y = data.frame()
for (clusternum in 1:K) {
groupid = D[which(!is.na(D[,clusternum])),clusternum]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) }
avg = colMeans(y)
se = colStdevs(y)/sqrt(dim(y)[1])
cluster = rep(paste('#',clusternum,sep=''),length(sec))
y = data.frame(t(rbind(cluster,sec,avg,se)))
for (j in 2:4) {
y[,j] = as.numeric(as.character(y[,j]))
}
rownames(y)=NULL
Y = rbind(Y, y)
}
Y
y
for (clusternum in 1:K) {
groupid = D[which(!is.na(D[,clusternum])),clusternum]
y = data.frame(t(values(S,keys=groupid)))
for (k in 1:dim(y)[2]) { y[,k] = as.numeric(y[,k]) } }
y
source('plot.r')
bofa = 2407 + 60075 + 5102
cfcu = 5 + 1002 + 26520 + 25098
bofa+cfcu
bofa+cfcu-119129
q()
